{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/database/utilites/Category.js","webpack://office-addin-taskpane-js/./src/taskpane/database/utilites/Module.js","webpack://office-addin-taskpane-js/./src/taskpane/database/utilites/Field.js","webpack://office-addin-taskpane-js/./src/taskpane/database/utilites/default_parsers.js","webpack://office-addin-taskpane-js/./src/taskpane/database/utilites/default_fields.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/advertisement.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/art.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/book.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/case.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/conference.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/correspondence.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/film.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/interview.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/journal.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/law.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/lecture.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/live.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/map.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/music.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/newspaper.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/official.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/patent.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/social.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/software.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/thesis.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/translation.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/verbal.js","webpack://office-addin-taskpane-js/./src/taskpane/database/categories/web.js","webpack://office-addin-taskpane-js/./src/taskpane/database/reference_db.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["//The support object Category is used in \"reference_db\" and contains name of\n//reference category and list of subcategories with their modules\n//use it as an argumert in function \"reference_db.add_category()\"\n\nfunction Category(name) {\n  this.name = name;\n  this.subtypes = [];\n\n  this.add_subcategory = function (name, module) {\n    this.subtypes.push({ name: name, module: module });\n  };\n}\n\nexport default Category;\n","/* global document*/\nconst debug = false; // if enabled, fills values of fields with default info\n\n//Class \"Module\" creates a separate module with its own logic and list of fields\n//-----------------------\n//How to use \"logic\" variable:\n//[\"#0\"] - value from first element in array \"fields_array\"\n//[\"_text_\"] - will print text\n//[\"+0_text_\"] - will print text only if first element in array \"fields_array\" has value\n//[\"+0_text_\"] - will print text only if first element in array \"fields_array\" doesn't have value\n//Examples of use: [\"+1#1_Text_\"], [_(_#0_)_], [\"-0-1#1#2\"]\n//-----------------------\nfunction Module(fields, logic) {\n  const id_prefix = \"field_id_\";\n  this.fields = fields;\n  this.logic = logic; //example [?1=1:2], [i2], [3_text_]\n  this.parent_div = null; //link to parent div\n  this.fields_array = []; //array of created field inputs\n\n  //Takes div element and created inside html code\n  this.create_html_code = (parent_div) => {\n    this.parent_div = parent_div;\n    this.parent_div.innerHTML = \"\";\n    this.fields_array = [];\n    let iterator = 0;\n\n    this.fields.forEach((field) => {\n      let main_container = document.createElement(\"div\");\n      let form_container = document.createElement(\"div\");\n      let field_id = id_prefix + iterator;\n\n      let label_element = document.createElement(\"label\");\n      label_element.htmlFor = field_id;\n      label_element.innerHTML = field.name;\n\n      // Create element\n      let input_element = null;\n      if (field.type === \"select\") {\n        input_element = document.createElement(\"select\");\n        field.values.forEach((value) => {\n          let optionElement = document.createElement(\"option\");\n          optionElement.value = value;\n          optionElement.textContent = value;\n          input_element.appendChild(optionElement);\n        });\n      } else {\n        input_element = document.createElement(\"input\");\n        input_element.type = field.type;\n        input_element.required = field.required;\n        if (debug) input_element.value = field.debug;\n        input_element.placeholder = field.debug; // For debugging\n      }\n\n      input_element.id = field_id;\n      input_element.get_value =\n        field.type === \"checkbox\" ? () => input_element.checked : () => field.parser(input_element.value);\n      this.fields_array.push(input_element);\n\n      // Create help popover\n      let desc_button = document.createElement(\"span\");\n      desc_button.role = \"button\";\n      desc_button.tabIndex = \"-1\";\n      desc_button.innerHTML = \"?\";\n      desc_button.dataset.bsContainer = \"body\";\n      desc_button.dataset.bsToggle = \"popover\";\n      desc_button.dataset.bsPlacement = \"left\";\n      desc_button.dataset.bsContent = field.description;\n      desc_button.dataset.bsTrigger = \"focus\";\n\n      // Add classes to components\n      main_container.classList.add(\"input-group\", \"mb-1\", \"has-validation\", \"justify-content-end\");\n      if (field.type !== \"checkbox\") form_container.classList.add(\"form-floating\");\n      //TODO: fix vertical aligh for checkbox\n      else form_container.classList.add(\"align-middle\");\n      desc_button.classList.add(\"input-group-text\");\n      switch (field.type) {\n        case \"text\":\n        case \"date\":\n        case \"time\":\n          label_element.classList.add(\"form-label\", \"text-secondary\");\n          input_element.classList.add(\"form-control\", \"fw-semibold\");\n          break;\n        case \"checkbox\":\n          label_element.classList.add(\"form-check-label\", \"me-3\");\n          input_element.classList.add(\"form-check-input\", \"me-3\");\n          break;\n        case \"select\":\n          label_element.classList.add(\"form-label\");\n          input_element.classList.add(\"form-select\", \"fw-semibold\");\n          break;\n        default:\n          break;\n      }\n      form_container.appendChild(input_element);\n      form_container.appendChild(label_element);\n      main_container.appendChild(form_container);\n      main_container.appendChild(desc_button);\n      this.parent_div.appendChild(main_container);\n\n      iterator++;\n    });\n  };\n\n  //Creates a list of formatted reference values using \"logic\" array\n  //It reads special code elements to create text\n  //Example: [\"#0\", \"#1\", \"i#2\", \"_[advertisement]._\", \"+3#3\", \"+3#4\"]\n  this.create_ref_array = () => {\n    let ref_array = [];\n    let values_array = [];\n    for (let i = 0; i < fields.length; i++) {\n      values_array.push(this.fields_array[i].get_value());\n    }\n    this.logic.forEach((element) => {\n      let ref_part = { text: \"\", italic: false };\n      if (element[0] == \"i\") {\n        ref_part.italic = true;\n        element = element.substring(1, element.length);\n      }\n      ref_part.text = parser(\"\", element, values_array);\n      if (ref_part.text) ref_array.push(ref_part);\n    });\n    return ref_array;\n  };\n}\n\n//Supportive function for create_ref_array that parse logic code\nfunction parser(init_value, logic, values_array) {\n  let result = init_value;\n  for (let i = 0; i < logic.length; i++) {\n    const element = logic[i];\n    switch (element) {\n      case \"#\": {\n        let field_id = [];\n        for (i++; i < logic.length; i++) {\n          if (/^[0-9]$/.test(logic[i])) field_id.push(logic[i]);\n          else break;\n        }\n        result += values_array[field_id.join(\"\")];\n        i--;\n        break;\n      }\n      case \"_\": {\n        let text = \"\";\n        for (i++; i < logic.length; i++) {\n          if (logic[i] === \"_\") break;\n          else text += logic[i];\n        }\n        result += text;\n        break;\n      }\n      case \"+\": {\n        let field_id = [];\n        for (i++; i < logic.length; i++) {\n          if (/^[0-9]$/.test(logic[i])) field_id.push(logic[i]);\n          else break;\n        }\n        if (values_array[field_id.join(\"\")]) result += parser(result, logic.substring(i, logic.length), values_array);\n        i = logic.length;\n        break;\n      }\n      case \"-\": {\n        let field_id = [];\n        for (i++; i < logic.length; i++) {\n          if (/^[0-9]$/.test(logic[i])) field_id.push(logic[i]);\n          else break;\n        }\n        if (!values_array[field_id.join(\"\")]) result += parser(result, logic.substring(i, logic.length), values_array);\n        i = logic.length;\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  return result;\n}\n\nexport default Module;\n","//The support object Field is used in \"Category\" objects and contains information\n//about different aspects of a field that will be shown in program\n//For example: Author, Year, Title, etc.\n\n//Default constructor\nfunction Field(name_or_obj, type, parser) {\n  if (typeof name_or_obj === \"object\") {\n    const { name, type, parser, description, debug, values, required } = name_or_obj;\n    this.name = name ? name : \"\";\n    this.type = type ? type : \"text\";\n    this.parser = parser ? parser : (data) => data.trim(); //doesn't work for checkbox types\n    this.description = description ? description : \"\";\n    this.debug = debug ? debug : \"\";\n    this.values = values ? values : [\"\"];\n    this.required = required != undefined ? required : true;\n  } else {\n    this.name = name_or_obj;\n    this.type = type;\n    this.parser = parser ? parser : (data) => data.trim(); //doesn't work for checkbox types\n    this.description = \"\";\n    this.debug = \"\";\n    this.values = [\"\"];\n    this.required = true;\n    //console.log(this);\n  }\n\n  this.set_name = function (name) {\n    this.name = name;\n  };\n  this.set_description = function (description) {\n    this.description = description;\n  };\n  this.set_parser = function (parser) {\n    this.parser = parser;\n  };\n  this.set_debug_text = function (text) {\n    this.debug = text;\n  };\n  this.set_option_values = function (values) {\n    this.values = values;\n  };\n  this.set_required = function (required) {\n    this.required = required;\n  };\n\n  this.set_parameters = function (obj) {\n    const { name, type, parser, description, debug, values, required } = obj;\n    this.name = name ? name : this.name;\n    this.type = type ? type : this.type;\n    this.parser = parser ? parser : this.parser;\n    this.description = description ? description : this.description;\n    this.debug = debug ? debug : this.debug;\n    this.values = values ? values : this.values;\n    this.required = required != undefined ? required : this.required;\n  };\n}\n\nexport default Field;\n","//List of default parsers that can be used in many different fields\n//Use it to save time and reduce copy-pasting\n\nconst def_parsers = {};\n\n//default parser for \"year\" values\ndef_parsers.year = (value) => (value.trim() ? \"(\" + value.trim() + \")\" : \"(n.d.)\");\n\n//Parser for URL\ndef_parsers.url = (data) => {\n  data = data.toLowerCase().trim();\n  if (!data) return \"\";\n  if (!(data.substring(0, 8) == \"https://\" || data.substring(0, 7) == \"http://\")) {\n    data = \"https://\" + data;\n  }\n  return \"Available from \" + data;\n};\n\n//Parser for Accessed date\ndef_parsers.accessed = (data) => {\n  let date;\n  if (!data) date = new Date();\n  else date = new Date(data);\n  return (\n    \"[accessed \" +\n    date.getDate().toString() +\n    \" \" +\n    date.toLocaleString(\"english\", { month: \"long\" }) +\n    \" \" +\n    date.getFullYear().toString() +\n    \"].\"\n  );\n};\n\n//Short date parser. Example: 25 Jun\ndef_parsers.date_short = (data) => {\n  let date;\n  if (!data) return \"\";\n  date = new Date(data);\n  return date.getDate().toString() + \" \" + date.toLocaleString(\"english\", { month: \"short\" });\n};\n\n//Long date parser. Example: 25 Juny\ndef_parsers.date_long = (data) => {\n  let date;\n  if (!data) return \"\";\n  date = new Date(data);\n  return date.getDate().toString() + \" \" + date.toLocaleString(\"english\", { month: \"long\" });\n};\n\n//Full date parser. Example: 12 February 2023\ndef_parsers.date_full = (data) => {\n  let date;\n  if (!data) return \"\";\n  date = new Date(data);\n  return date.getDate().toString() + \" \" + date.toLocaleString(\"english\", { month: \"long\" }) + \" \" + date.getFullYear();\n};\n\n//Parser for authors. Put surnames then names\ndef_parsers.author = (data) => {\n  if (!data.trim()) return \"\";\n  let result = \"\";\n  let authors = data.trim().split(\",\");\n  let a = 1;\n  authors.forEach((element) => {\n    element = element.trim();\n    if (element[0] === '\"') {\n      result += element.substring(1, element.length - 1);\n    } else {\n      let i = 0;\n      let parts = element.split(\" \");\n      if (parts.length === 1 && authors.length === 1) result = result + parts[0];\n      else\n        parts.forEach((part) => {\n          if (part) {\n            if (i === 0) result = result + part + \", \";\n            else result = result + part[0] + \".\";\n            i++;\n          }\n        });\n    }\n    if (a + 1 === authors.length) result = result + \" and \";\n    else if (a === authors.length) result = result + \"\";\n    else result = result + \", \";\n    a++;\n  });\n  return result;\n};\n\n//Parser for authors. Put names then surnames\ndef_parsers.author_reverse = (data) => {\n  if (!data.trim()) return \"\";\n  let result = \"\";\n  let authors = data.trim().split(\",\");\n  let a = 1;\n  authors.forEach((element) => {\n    element = element.trim();\n    if (element[0] === '\"') {\n      result += element.substring(1, element.length - 1);\n    } else {\n      let i = 0;\n      let parts = element.split(\" \");\n      parts.reverse();\n      if (parts.length === 1 && authors.length === 1) result = result + parts[0];\n      else\n        parts.forEach((part) => {\n          if (part) {\n            if (i + 1 === parts.length) result = result + part;\n            else result = result + part[0] + \". \";\n            i++;\n          }\n        });\n    }\n    if (a + 1 === authors.length) result = result + \" and \";\n    else if (a === authors.length) result = result + \"\";\n    else result = result + \", \";\n    a++;\n  });\n  return result;\n};\n\n//Parser for page or page range\ndef_parsers.page = (data) => {\n  if (!data.trim()) return \"\";\n  let result = \"\";\n  if (data.trim().split(\"-\").length > 1 || data.trim().split(\",\").length > 1) result = \"pp. \";\n  else result = \"p. \";\n  result += data;\n\n  return result;\n};\n\n//Parser for editors\ndef_parsers.author_editor = (value) => {\n  if (value.split(\",\").length > 1) return def_parsers.author(value) + \" (eds.)\";\n  else return def_parsers.author(value) + \" (ed.)\";\n};\n\n//Parser for editors reversed\ndef_parsers.author_editor_reverse = (value) => {\n  if (!value.trim()) return value.trim();\n  if (value.split(\",\").length > 1) return def_parsers.author_reverse(value) + \" (eds.)\";\n  else return def_parsers.author_reverse(value) + \" (ed.)\";\n};\n\nexport default def_parsers;\n","//List of default fields that can be used in many different reference categories\n//Use it to save time and reduce copy-pasting\nimport def_parsers from \"./default_parsers\";\n\nconst def_fields = {};\n\n//Author\ndef_fields.author = {\n  name: \"Author\",\n  description:\n    \"For individual authors, use Surname First Name(s). If multiple authors, separate with commas. \" +\n    \"Example: Smith John, O'Connell Daniel. \" +\n    \"To preserve company names, enclose them in quotation marks. \" +\n    'Example: \"ABC Company\"',\n  type: \"text\",\n  parser: def_parsers.author,\n  debug: \"Smith John, O'Connell Daniel\",\n};\n\n//Default year field\ndef_fields.year = {\n  name: \"Year (optional)\",\n  description: \"Year of publication (if known)\",\n  type: \"text\",\n  parser: def_parsers.year,\n  debug: \"2023\",\n  required: false,\n};\n\n//Title\ndef_fields.title = {\n  name: \"Title\",\n  description: \"Title (and subtitle if applicable)\",\n  type: \"text\",\n  debug: \"My Cool Work\",\n};\n\n//Default location\ndef_fields.location = {\n  name: \"Place of publication (optional)\",\n  type: \"text\",\n  description: \"Place of publication (if known)\",\n  debug: \"Cahersiveen\",\n  required: false,\n};\n\n//Publisher\ndef_fields.publisher = {\n  name: \"Publisher\",\n  type: \"text\",\n  description: \"Publisher\",\n  debug: \"Fox Books\",\n};\n//Url\ndef_fields.url = {\n  name: \"Web address (optional)\",\n  description: \"Web address\",\n  type: \"text\",\n  parser: def_parsers.url,\n  debug: \"www.fox.com\",\n  required: false,\n};\n\n//Accessed\ndef_fields.accessed = {\n  name: \"Accessed (optional)\",\n  description: \"The date you accessed the resource, or leave the field empty to use today's date\",\n  type: \"date\",\n  parser: def_parsers.accessed,\n  required: false,\n};\n\n//Book edition\ndef_fields.b_edition = {\n  name: \"Edition (optional)\",\n  type: \"text\",\n  parser: (value) => (value.trim() ? value.trim() + \" edition.\" : \"\"),\n  description: \"Edition (only if not the first edition). Example: 2nd\",\n  debug: \"2nd\",\n  required: false,\n};\n\n//Page range\ndef_fields.b_page = {\n  name: \"Page number/range\",\n  type: \"text\",\n  parser: def_parsers.page,\n  description: \"Page number/range. Example: 46 or 20-50\",\n  debug: \"13-50\",\n};\n\nexport default def_fields;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst advertisement = new Category(\"Advertisement\");\n\n//Fields\nconst f_advertiser = new Field({ name: \"Advertiser\", type: \"text\", description: \"Advertiser\", debug: \"Fox Corp\" });\n\nconst f_year = new Field(def_fields.year);\n\nconst f_desc = new Field({\n  name: \"Short description\",\n  type: \"text\",\n  description: \"Headline of the advertisement or a short description if more appropriate\",\n  debug: \"How to create Word Addon in 5 steps\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_pub_title = new Field({\n  name: \"Title of publication\",\n  type: \"text\",\n  description: \"Title of the publication where you found the advert\",\n  debug: \"Programming and development\",\n});\n\nconst f_pub_date = new Field({\n  name: \"Day and month (optional)\",\n  type: \"date\",\n  parser: def_parsers.date_long,\n  description: \"Day and month of publication (if given)\",\n  required: false,\n});\n\nconst f_vol_num = new Field({\n  name: \"Volume number (optional)\",\n  type: \"text\",\n  description: \"Valume number (only if there is no part/issue/month/season)\",\n  debug: \"36\",\n  required: false,\n});\n\nconst f_issue = new Field({\n  name: \"Part/issue/month/season (optional)\",\n  type: \"text\",\n  parser: (value) => (value.trim() ? \"(\" + value.trim() + \")\" : \"\"),\n  description: \"If exists, put part/issue/month/season\",\n  debug: \"2nd issue\",\n  required: false,\n});\n\nconst f_page_num = new Field({ name: \"Page number\", type: \"text\", description: \"Page number\", debug: \"89\" });\n\nconst f_channel = new Field({\n  name: \"Broadcast channel\",\n  type: \"text\",\n  description: \"Broadcast chanell where you saw/heard the advertisement\",\n  debug: \"Shy Fox Channel\",\n});\n\nconst f_ch_ad_date = new Field({\n  name: \"Day and month of broadcast\",\n  type: \"date\",\n  parser: def_parsers.date_long,\n  description: \"Day and month of broadcast\",\n});\n\nconst f_ch_ad_time = new Field({\n  name: \"Time of broadcast (optional)\",\n  type: \"time\",\n  description: \"Time of broadcast (if relevant)\",\n  required: false,\n});\n\n//Modules\nconst m_online = new Module(\n  [f_advertiser, f_year, f_desc, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[advertisement]._\", \"+3#3\", \"+3#4\"]\n);\n\nconst m_print = new Module(\n  [f_advertiser, f_year, f_desc, f_pub_title, f_pub_date, f_vol_num, f_issue, f_page_num],\n  [\"#0\", \"#1\", \"#2\", \"_[advertisement]._\", \"i#3_,_\", \"+4#4\", \"-6+5#5_,_\", \"+5+6#5\", \"+6#6\", \"+7_p._#7_._\"]\n);\n\nconst m_broadcast = new Module(\n  [f_advertiser, f_year, f_desc, f_channel, f_ch_ad_date, f_ch_ad_time],\n  [\"#0\", \"#1\", \"i#2\", \"_[advertisement]._\", \"#3_,_\", \"+5#4_,_\", \"-5#4_._\", \"+5#5_._\"]\n);\n\nadvertisement.add_subcategory(\"Online\", m_online);\nadvertisement.add_subcategory(\"Print\", m_print);\nadvertisement.add_subcategory(\"Broadcast\", m_broadcast);\n\nexport default advertisement;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst art = new Category(\"Art\");\n\n//Fields\nconst f_artist = new Field(def_fields.author);\nf_artist.set_name(\"Artist\");\n\nconst f_year = new Field(def_fields.year);\nf_year.set_name(\"Year of composition\");\nf_year.set_description(\"Year of composition. If the exact date is not knows use c. for circa e.g. (c.1986)\");\n\nconst f_title = new Field({\n  name: \"Title of artwork\",\n  type: \"text\",\n  description: \"Title of composition, or a description if more appropriate\",\n  debug: \"The Fox Hunt\",\n});\n\nconst f_format = new Field({\n  name: \"Format (optional)\",\n  type: \"text\",\n  description: \"If you viewed the artwork offline, provide information about the format. For example: oil on canvas\",\n  debug: \"oil on canvas\",\n  required: false,\n});\n\nconst f_location = new Field({\n  name: \"Location (optional)\",\n  type: \"text\",\n  description: \"Location if known\",\n  debug: \"Cahersiveen\",\n  required: false,\n});\n\nconst f_gallery = new Field({\n  name: \"Gallery/collection/museum name\",\n  type: \"text\",\n  description: \"Name of gallery/collection/museum\",\n  debug: \"Green Gallery\",\n});\n\nconst f_url = new Field(def_fields.url);\nf_url.set_name(\"Web address (optional)\");\nf_url.set_required(false);\n\nconst f_accessed = new Field(def_fields.accessed);\nf_accessed.set_name(\"Accessed (optional)\");\nf_accessed.set_required(false);\n\nconst f_b_year = new Field(def_fields.year);\nf_b_year.set_name(\"Year of book publication\");\n\nconst f_b_editor = new Field(def_fields.author);\nf_b_editor.set_name(\"Book editor(s)\");\nf_b_editor.set_parser((value) => {\n  if (value.split(\",\").length > 1) return def_parsers.author_reverse(value) + \" (eds.)\";\n  else return def_parsers.author_reverse(value) + \" (ed.)\";\n});\n\nconst f_b_title = new Field({\n  name: \"Title of book\",\n  type: \"text\",\n  description: \"Title (and subtitle if applicable) of book\",\n  debug: \"Pictures and Arts\",\n});\n\nconst f_b_edition = new Field(def_fields.b_edition);\n\nconst f_b_location = new Field(def_fields.location);\n\nconst f_b_publisher = new Field(def_fields.publisher);\n\nconst f_b_page = new Field(def_fields.b_page);\n\n//Modules]\nconst m_art = new Module(\n  [f_artist, f_year, f_title, f_format, f_location, f_gallery, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i-3#2_._\", \"i+3#2\", \"+3_[_#3_]._\", \"+4#4_:_\", \"#5_._\", \"+6#6\", \"+6#7\"]\n);\n\nconst m_art_book = new Module(\n  [\n    f_artist,\n    f_year,\n    f_title,\n    f_b_editor,\n    f_b_year,\n    f_b_title,\n    f_b_edition,\n    f_b_location,\n    f_b_publisher,\n    f_b_page,\n    f_url,\n    f_accessed,\n  ],\n  [\n    \"#0\",\n    \"#1\",\n    \"#2_. In:_\",\n    \"#3\",\n    \"#4\",\n    \"i+5-6#5_._\",\n    \"i+5+6#5_,_\",\n    \"+5+6#6\",\n    \"+7#7_:_\",\n    \"+8#8_,_\",\n    \"#9_._\",\n    \"+10#10\",\n    \"+10#11\",\n  ]\n);\n\nart.add_subcategory(\"Art\", m_art);\nart.add_subcategory(\"Art in books\", m_art_book);\n\nexport default art;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst book = new Category(\"Book\");\n\n//Fields\nconst f_author = new Field(def_fields.author);\nf_author.set_name(\"Author (optional)\");\nf_author.set_required(false);\n\nconst f_author_ed = new Field(def_fields.author);\nf_author_ed.set_parser((value) => {\n  if (value.split(\",\").length > 1) return def_parsers.author(value) + \" (eds.)\";\n  else return def_parsers.author(value) + \" (ed.)\";\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title of book\",\n  type: \"text\",\n  description: \"Title (and subtitle if applicable) of book\",\n  debug: \"My Cool Book\",\n});\n\nconst f_edition = new Field(def_fields.b_edition);\n\nconst f_publisher = new Field(def_fields.publisher);\n\nconst f_place = new Field(def_fields.location);\n\nconst f_ch_author = new Field(def_fields.author);\nf_ch_author.set_name(\"Chapter author\");\n\nconst f_ch_title = new Field({\n  name: \"Title of chapter\",\n  type: \"text\",\n  description: \"Title of chapter\",\n  debug: \"First Chapter\",\n});\n\nconst f_ch_editor = new Field(def_fields.author);\nf_ch_editor.set_name(\"Editor(s)\");\nf_ch_editor.set_parser((value) => {\n  if (value.split(\",\").length > 1) return def_parsers.author_reverse(value) + \" (eds.)\";\n  else return def_parsers.author_reverse(value) + \" (ed.)\";\n});\n\nconst f_ch_page = new Field(def_fields.b_page);\n\nconst f_in_author = new Field(def_fields.author);\nf_in_author.set_name(\"Introduction author\");\n\nconst f_in_type = new Field({\n  name: \"Type of introduction\",\n  type: \"select\",\n  description: \"Introduction/Foreword/Afterword/Preface\",\n  values: [\"Introduction\", \"Foreword\", \"Afterword\", \"Preface\"],\n});\n\nconst f_in_b_author = new Field(def_fields.author);\nf_in_b_author.set_parser(def_parsers.author_reverse);\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_s_version = new Field({\n  name: \"Version (optional)\",\n  type: \"text\",\n  description: \"Version of the sacret text (if applicable). Example: authorized King James version\",\n  debug: \"authorized King James version\",\n  required: false,\n});\n\nconst f_cl_author = new Field({\n  name: \"Author\",\n  type: \"text\",\n  description: \"Author of the text\",\n  debug: \"Virgil\",\n});\n\nconst f_cl_translator = new Field(def_fields.author);\nf_cl_translator.set_name(\"Translator's name\");\nf_cl_translator.set_parser(def_parsers.author_reverse);\n\n//MODULES\nconst m_book = new Module(\n  [f_author, f_year, f_title, f_edition, f_place, f_publisher],\n  [\"+0#0\", \"+0#1\", \"i+2-3#2_._\", \"i+2+3#2_,_\", \"+2+3#3\", \"-0#1\", \"+4#4_:_\", \"+5#5_._\"]\n);\n\nconst m_book_ed = new Module(\n  [f_author_ed, f_year, f_title, f_edition, f_place, f_publisher],\n  [\"+0#0\", \"+0#1\", \"i+2-3#2_._\", \"i+2+3#2_,_\", \"+2+3#3\", \"-0#1\", \"+4#4_:_\", \"+5#5_._\"]\n);\n\nconst m_book_chapter = new Module(\n  [f_ch_author, f_year, f_ch_title, f_ch_editor, f_title, f_edition, f_place, f_publisher, f_ch_page],\n  [\"#0\", \"#1\", \"#2_. In:_\", \"#3\", \"i+4-5#4_._\", \"i+4+5#4_,_\", \"+4+5#5\", \"+6#6_:_\", \"+7#7_,_\", \"#8_._\"]\n);\n\nconst m_intro_to_book = new Module(\n  [f_in_author, f_year, f_in_type, f_in_b_author, f_title, f_edition, f_place, f_publisher],\n  [\"#0\", \"#1\", \"#2_. In:_\", \"#3\", \"i+4-5#4_._\", \"i+4+5#4_,_\", \"+4+5#5\", \"+6#6_:_\", \"+7#7_._\"]\n);\n\nconst m_e_book = new Module(\n  [f_author, f_year, f_title, f_edition, f_place, f_publisher, f_url, f_accessed],\n  [\n    \"+0#0\",\n    \"+0#1\",\n    \"i+2-3#2\",\n    \"+2-3_[ebook]._\",\n    \"i+2+3#2\",\n    \"+2+3_[ebook], _#3\",\n    \"-0#1\",\n    \"+4#4_:_\",\n    \"+5#5_._\",\n    \"+6#6\",\n    \"+6#7\",\n  ]\n);\n\nconst m_e_book_ed = new Module(\n  [f_author_ed, f_year, f_title, f_edition, f_place, f_publisher, f_url, f_accessed],\n  [\n    \"+0#0\",\n    \"+0#1\",\n    \"i+2-3#2\",\n    \"+2-3_[ebook]._\",\n    \"i+2+3#2\",\n    \"+2+3_[ebook], _#3\",\n    \"-0#1\",\n    \"+4#4_:_\",\n    \"+5#5_._\",\n    \"+6#6\",\n    \"+6#7\",\n  ]\n);\n\nconst m_sacred = new Module(\n  [f_title, f_s_version, f_place, f_publisher],\n  [\"i-1#0_._\", \"i+1#0\", \"+1_[_#1_]._\", \"+2#2_:_\", \"#3_._\"]\n);\n\nconst m_classic = new Module(\n  [f_cl_author, f_title, f_year, f_cl_translator, f_place, f_publisher],\n  [\"#0_,_\", \"i#1\", \"#2_._\", \"_Translated by _#3_._\", \"+4#4_:_\", \"+5#5_._\"]\n);\n\nbook.add_subcategory(\"Book or Booklet\", m_book);\nbook.add_subcategory(\"Edited Book or Booklet\", m_book_ed);\nbook.add_subcategory(\"Chapter in an edited book\", m_book_chapter);\nbook.add_subcategory(\"Introduction to a book\", m_intro_to_book);\nbook.add_subcategory(\"Ebook\", m_e_book);\nbook.add_subcategory(\"Edited Ebook\", m_e_book_ed);\nbook.add_subcategory(\"Sacred text\", m_sacred);\nbook.add_subcategory(\"Classical or anchient text\", m_classic);\n\nexport default book;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst case_study = new Category(\"Case study or report\");\n\n//Fields\nconst f_author = new Field(def_fields.author);\n\nconst f_author_ed = new Field(def_fields.author);\nf_author_ed.set_parser(def_parsers.author_editor);\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title of book\",\n  type: \"text\",\n  description: \"Title (and subtitle if applicable) of study\",\n  debug: \"My Cool Report\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_publisher = new Field(def_fields.publisher);\nf_publisher.set_name(\"Publisher (optional)\");\nf_publisher.set_required(false);\n\nconst f_place = new Field(def_fields.location);\n\n//Modules\nconst m_case_study = new Module(\n  [f_author, f_year, f_title, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"+3+4#3_:_\", \"+4#4_._\", \"+5#5\", \"+5#6\"]\n);\n\nconst m_case_study_ed = new Module(\n  [f_author_ed, f_year, f_title, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"+3+4#3_:_\", \"+4#4_._\", \"+5#5\", \"+5#6\"]\n);\n\ncase_study.add_subcategory(\"Case study or report\", m_case_study);\ncase_study.add_subcategory(\"Edited Case study\", m_case_study_ed);\n\nexport default case_study;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst conference = new Category(\"Conference\");\n\n//Fields\nconst f_author = new Field(def_fields.author);\nf_author.set_name(\"Author\");\n\nconst f_year = new Field(def_fields.year);\nf_year.set_description(\"Year of conference\");\n\nconst f_title = new Field(def_fields.title);\nf_title.set_name(\"Title of the paper\");\n\nconst f_publisher = new Field(def_fields.publisher);\n\nconst f_place = new Field(def_fields.location);\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_con_editor = new Field(def_fields.author);\nf_con_editor.set_name(\"Editor(optional)\");\nf_con_editor.set_parser(def_parsers.author_editor_reverse);\nf_con_editor.set_required(false);\n\nconst f_con_title = new Field({\n  name: \"Title of the conference\",\n  type: \"text\",\n  description: \"Title of the conference\",\n  debug: \"My Cool Conference\",\n});\n\nconst f_con_place = new Field(def_fields.location);\nf_con_place.set_parameters({\n  name: \"Place of conference\",\n  description: \"Place of conference\",\n});\n\nconst f_con_date = new Field({\n  name: \"Day and month of conference\",\n  type: \"date\",\n  description: \"Day and month of conference\",\n  parser: def_parsers.date_long,\n});\n\nconst f_con_page = new Field(def_fields.b_page);\n\n//Modules\nconst m_paper = new Module(\n  [\n    f_author,\n    f_year,\n    f_title,\n    f_con_editor,\n    f_con_title,\n    f_con_place,\n    f_con_date,\n    f_place,\n    f_publisher,\n    f_con_page,\n    f_url,\n    f_accessed,\n  ],\n  [\"#0\", \"#1\", \"#2_. In:_\", \"+3#3\", \"i#4_,_\", \"#5_,_\", \"#6_._\", \"+7#7_:_\", \"#8_,_\", \"#9_._\", \"+10#10\", \"+10#11\"]\n);\n\nconst m_poster = new Module(\n  [f_author, f_year, f_title, f_con_title, f_con_place, f_con_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"#2_. In:_\", \"i#3_,_\", \"#5_,_\", \"#4_._\", \"+6#6\", \"+6#7\"]\n);\n\nconference.add_subcategory(\"Conference paper\", m_paper);\nconference.add_subcategory(\"Conference poster or presentation\", m_poster);\n\nexport default conference;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Correspondence\nconst correspondence = new Category(\"Correspondence\");\n\n//Fields\nconst f_sender = new Field(def_fields.author);\nf_sender.set_name(\"Sender\");\n\nconst f_year = new Field(def_fields.year);\nf_year.set_description(\"Year the letter was sent\");\n\nconst f_subject = new Field({\n  name: \"Subject line\",\n  type: \"text\",\n  description: \"Subject line or short description, if more appropriate\",\n  debug: \"Hi, how are you?\",\n});\n\nconst f_sent_to = new Field(def_fields.author);\nf_sent_to.set_parameters({\n  name: \"Sent to\",\n  parser: def_parsers.author_reverse,\n});\n\nconst f_date = new Field({\n  name: \"Day and month\",\n  type: \"date\",\n  description: \"Day and month the letter was sent\",\n  parser: def_parsers.date_long,\n});\n\nconst f_place = new Field(def_fields.location);\nf_place.set_parameters({\n  name: \"Location of collection (optional)\",\n  type: \"text\",\n  description: \"If a letter is in a collection put location of collection\",\n  debug: \"Cahersiveen\",\n  required: false,\n});\n\nconst f_publisher = new Field(def_fields.publisher);\nf_publisher.set_parameters({\n  name: \"Publisher (optional)\",\n  description: \"Name of the collection (if applicable) or publisher\",\n  required: false,\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n//Modules\nconst m_email = new Module(\n  [f_sender, f_year, f_subject, f_sent_to, f_date],\n  [\"#0\", \"#1\", \"i#2\", \"_[email]._\", \"_Sent to _#3_,_\", \"#4_._\"]\n);\n\nconst m_letter = new Module(\n  [f_sender, f_year, f_subject, f_sent_to, f_date, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[letter]._\", \"_Sent to _#3_,_\", \"#4_._\", \"+5+6#5_:_\", \"+6#6_._\", \"+7#7\", \"+7#8\"]\n);\n\ncorrespondence.add_subcategory(\"Email\", m_email);\ncorrespondence.add_subcategory(\"Letter\", m_letter);\n\nexport default correspondence;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n//Category\nconst film = new Category(\"Film\");\n\n// Fields\nconst f_director = new Field(def_fields.author);\nf_director.set_name(\"Director(s)\");\nf_director.set_parser((value) => {\n  if (value.split(\",\").length > 1) return def_parsers.author(value) + \" (dirs.)\";\n  else return def_parsers.author(value) + \" (dir.)\";\n});\n\nconst f_year = new Field(def_fields.year);\nf_year.set_description(\"Year of release\");\n\nconst f_title = new Field(def_fields.title);\n\nconst f_type = new Field({\n  name: \"Format\",\n  type: \"text\",\n  description: \"The format on which you viewed the film/series. Example: DVD or download etc.)\",\n  debug: \"DVD\",\n});\n\nconst f_location = new Field(def_fields.location);\nf_location.set_parameters({\n  name: \"Location (optional)\",\n  description: \"Location of distributor\",\n  required: false,\n});\n\nconst f_distributor = new Field({\n  name: \"Distributor (optional)\",\n  type: \"text\",\n  description: \"Name of the film's distributor (if known)\",\n  debug: \"Fox Film\",\n  required: false,\n});\n\nconst f_url = new Field(def_fields.url);\nf_url.set_name(\"Web address (optional)\");\nf_url.set_required(false);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_s_type = new Field({\n  name: \"Television/Radio\",\n  type: \"select\",\n  description: \"Radio or television\",\n  values: [\"television\", \"radio\"],\n});\n\nconst f_channel = new Field({\n  name: \"Channel\",\n  type: \"text\",\n  description: \"Broadcast channel\",\n  debug: \"Fox Film\",\n});\n\nconst f_channel_ser = new Field({\n  name: \"Channel (optional)\",\n  type: \"text\",\n  description: \"Broadcast channel (if available)\",\n  debug: \"Fox Film\",\n  required: false,\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Day, month, and year of transmission\",\n  parser: def_parsers.date_full,\n});\n\nconst f_time = new Field({\n  name: \"Time (optional)\",\n  type: \"time\",\n  description: \"Time of transmission (if relevant)\",\n  required: false,\n});\n\nconst f_season = new Field({\n  name: \"Season (optional)\",\n  type: \"text\",\n  description: \"Season by the number (if applicable)\",\n  debug: \"3\",\n  required: false,\n});\n\nconst f_episode = new Field({\n  name: \"Episode (optional)\",\n  type: \"text\",\n  description: \"Episode by the number (if applicable)\",\n  debug: \"6\",\n  required: false,\n});\n\n//Modules\nconst m_film = new Module(\n  [f_director, f_year, f_title, f_type, f_location, f_distributor, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[_#3_]._\", \"+4+5#4_:_\", \"+5#5_._\", \"+6#6\", \"+6#7\"]\n);\n\nconst m_radio_programme = new Module(\n  [f_title, f_year, f_s_type, f_channel, f_date, f_time],\n  [\"i#0\", \"#1\", \"_[_#2_]._\", \"#3_._\", \"+5#4_,_\", \"-5#4_._\", \"+5#5_._\"]\n);\n\nconst m_radio_series = new Module(\n  [f_title, f_year, f_type, f_channel_ser, f_season, f_episode, f_url, f_accessed],\n  [\n    \"i#0\",\n    \"#1\",\n    \"_[_#2_]._\",\n    \"+4+5+3#3_,_\",\n    \"-4+5+3#3_,_\",\n    \"+4-5+3#3_,_\",\n    \"-4-5+3#3_._\",\n    \"+4+5_Season _#4_,_\",\n    \"+4-5_Season _#4_._\",\n    \"+5_episode _#5_._\",\n    \"+6#6\",\n    \"+6#7\",\n  ]\n);\n\nconst m_recorded = new Module(\n  [f_title, f_year, f_s_type, f_season, f_episode, f_channel, f_date, f_time, f_url, f_accessed],\n  [\n    \"i#0\",\n    \"#1\",\n    \"_[_#2_]._\",\n    \"+3+4_Season _#3_,_\",\n    \"+3-4_Season _#3_._\",\n    \"+4_episode _#4_._\",\n    \"#5_._\",\n    \"+7#6_,_\",\n    \"-7#6_._\",\n    \"+7#7_._\",\n    \"+8#8\",\n    \"+8#9\",\n  ]\n);\n\nfilm.add_subcategory(\"Film\", m_film);\nfilm.add_subcategory(\"Radio or television programme\", m_radio_programme);\nfilm.add_subcategory(\"Radio or television series\", m_radio_series);\nfilm.add_subcategory(\"Recorded programme in an online archive\", m_recorded);\n\nexport default film;\n","//TODO: finish it\nimport Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst interview = new Category(\"Interview\");\n\n// Fields\nconst f_interviewee = new Field(def_fields.author);\nf_interviewee.set_name(\"Inteerviewee\");\n\nconst f_year = new Field(def_fields.year);\n\nconst f_interviewer = new Field(def_fields.author);\nf_interviewer.set_name(\"Interviewed by\");\nf_interviewer.set_parser(def_parsers.author_reverse);\n\nconst f_programme = new Field({\n  name: \"Programme name\",\n  type: \"text\",\n  description: \"Name of the interview program or show\",\n  debug: \"My programme\",\n});\n\nconst f_broadcast = new Field({\n  name: \"Broadcast\",\n  type: \"text\",\n  description: \"Broadcast channel\",\n  debug: \"Fox channel\",\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Date of the interview\",\n  parser: def_parsers.date_long,\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_description = new Field({\n  name: \"Description\",\n  type: \"text\",\n  description: \"Short description of the interview\",\n  debug: \"Short interview\",\n});\n\n// Modules\nconst m_interview = new Module(\n  [f_interviewee, f_year, f_interviewer, f_programme, f_broadcast, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"_Interviewed by _#2_._\", \"i#3_._\", \"#4_,_\", \"#5_._\", \"+6#6\", \"+6#7\"]\n);\n\nconst m_personal_interview = new Module(\n  [f_interviewee, f_year, f_description, f_interviewer, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"_Interviewed by _#3_,_\", \"#4_._\", \"+5#5\", \"+5#6\"]\n);\n\n// Add modules to the interviewCategory\ninterview.add_subcategory(\"Interview on radio or television\", m_interview);\ninterview.add_subcategory(\"Personal interview\", m_personal_interview);\n\nexport default interview;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Journal\nconst journal = new Category(\"Journal\");\n\n// Fields\nconst f_author = new Field(def_fields.author);\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Article title (optional)\",\n  type: \"text\",\n  description: \"Title of the journal article\",\n  debug: \"The Study of Neural Networks\",\n  required: false,\n});\n\nconst f_journal_title = new Field({\n  name: \"Journal title\",\n  type: \"text\",\n  description: \"Title of the journal\",\n  debug: \"My Journal\",\n});\n\nconst f_volume = new Field({\n  name: \"Volume number (optional)\",\n  type: \"text\",\n  description: \"Volume number of the journal\",\n  debug: \"12\",\n  required: false,\n});\n\nconst f_issue = new Field({\n  name: \"Issue (optional)\",\n  type: \"text\",\n  description: \"If there is also a part/issue/month/season\",\n  debug: \"123\",\n  required: false,\n});\n\nconst f_range = new Field({\n  name: \"Page range\",\n  type: \"text\",\n  description: \"Page range of the journal article\",\n  parser: def_parsers.page,\n  debug: \"33-78\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Journal Module\nconst m_journal = new Module(\n  [f_author, f_year, f_title, f_journal_title, f_volume, f_issue, f_range, f_url, f_accessed],\n  [\"#0\", \"#1\", \"+2#2_._\", \"i#3_,\", \"-5+4#4_,_\", \"+5+4#4\", \"+5_(_#5_)_\", \"#6_._\", \"+7#7\", \"+7#8\"]\n);\n\n// Adding the module to the journal category\njournal.add_subcategory(\"Journal article\", m_journal);\n\nexport default journal;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst law = new Category(\"Law\");\n\n// Fields\nconst f_p_names = new Field({\n  name: \"Party Names\",\n  type: \"text\",\n  description: \"Names of the parties separated by a v. Example: Plaintiff v Defendant\",\n  debug: \"Plaintiff v Defendant\",\n});\n\nconst f_year = new Field({\n  name: \"Year\",\n  type: \"text\",\n  description: \"Year when the case was heard\",\n  debug: \"2023\",\n});\n\nconst f_volume = new Field({\n  name: \"Volume (optional)\",\n  type: \"text\",\n  description: \"Volume number of the law report\",\n  debug: \"55\",\n  required: false,\n});\n\nconst f_abbreviation = new Field({\n  name: \"Abbreviation\",\n  type: \"text\",\n  description: \"Abbreviation of the law report. Example: I.R.L.M.\",\n  debug: \"X.Y.Z.\",\n});\n\nconst f_page = new Field({\n  name: \"Page\",\n  type: \"text\",\n  description: \"Page number/case number\",\n  debug: \"112\",\n});\n\nconst f_court = new Field({\n  name: \"Court\",\n  type: \"text\",\n  description: \"Name of the court where the case was decided\",\n  debug: \"Supreme Court\",\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Date when the case was decided\",\n  parser: def_parsers.date_long,\n  debug: \"2023-07-15\",\n});\n\nconst f_square = new Field({\n  name: \"Year in Square brackets\",\n  type: \"checkbox\",\n  description: \"Should year to be put in square brackets - follow the style given in the Law Report\",\n  required: false,\n});\n\n// Case Module\nconst m_case = new Module(\n  [f_p_names, f_year, f_volume, f_abbreviation, f_page, f_square],\n  [\"i#0\", \"+5_[_#1_]_\", \"-5_(_#1_)_\", \"+2#2\", \"#3\", \"#4_._\"]\n);\n\n// Unreported Case Module\nconst m_unreported_case = new Module(\n  [f_p_names, f_year, f_court, f_date],\n  [\"i#0\", \"_(_#1_) [unreported]_\", \"#2_,_\", \"#3_._\"]\n);\n\nlaw.add_subcategory(\"Case (Law Report)\", m_case);\nlaw.add_subcategory(\"Unreported Case\", m_unreported_case);\n\nexport default law;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst lecture = new Category(\"Lecture/Seminar/Class Handout\");\n\n// Fields\nconst f_lecturer = new Field(def_fields.author);\nf_lecturer.set_name(\"Lecturer\");\n\nconst f_year = new Field(def_fields.year);\nf_year.set_description(\"Year when the lecture was presented\");\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title or short description of the lecture/seminar/class handout\",\n  debug: \"Introduction to Artificial Intelligence\",\n});\n\nconst f_m_title = new Field({\n  name: \"Module Title and code\",\n  type: \"text\",\n  description: \"Title of the module or course and code\",\n  debug: \"CS101\",\n});\n\nconst f_institut = new Field({\n  name: \"Institute\",\n  type: \"text\",\n  description: \"Name of the institute or university where the lecture was delivered\",\n  debug: \"XYZ University\",\n});\n\nconst f_date = new Field({\n  name: \"Date (optional)\",\n  type: \"date\",\n  description: \"Date of when the lecture\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-01\",\n  required: false,\n});\n\nconst f_type = new Field({\n  name: \"Type of lecture\",\n  type: \"select\",\n  description: \"Type of lecture\",\n  parser: (data) => \"[\" + data + \"].\",\n  values: [\"lecture\", \"seminar\", \"class handout\"],\n});\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Lecture Module\nconst m_lecture = new Module(\n  [f_lecturer, f_year, f_title, f_type, f_m_title, f_institut, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"#3\", \"#4_,_\", \"+6#5_,_\", \"-6#5_._\", \"+6#6_._\", \"+7#7\", \"+7#8\"]\n);\n\n// Adding the module to the lectures category\nlecture.add_subcategory(\"Lecture\", m_lecture);\n\n// Exporting the \"lectures\" category with the associated module and fields\nexport default lecture;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst life = new Category(\"Life performance\");\n\n// Fields\nconst f_artist = new Field(def_fields.author);\nf_artist.set_name(\"Artist's name or stage name\");\nf_artist.set_description(\n  \"Artist(s) Surname and First Name(s). If multiple artists, separate with commas. \" +\n    \"Example: Smith John, O'Connell Daniel. \" +\n    \"If performer uses a stage name, enclose it in quotation marks. \" +\n    'Example: \"The Machine\"'\n);\n\nconst f_year = new Field(def_fields.year);\nf_year.set_parameters({\n  description: \"Year of performance\",\n});\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title or short description of performance\",\n  debug: \"Concert Performance\",\n});\n\nconst f_performed = new Field({\n  name: \"Performed by (optional)\",\n  type: \"text\",\n  description: \"For dance and dramatic perfomances put the name of the performer\",\n  debug: \"Smith John\",\n  required: false,\n});\n\nconst f_place = new Field({\n  name: \"Place\",\n  type: \"text\",\n  description: \"Place of performance\",\n  debug: \"New York\",\n});\n\nconst f_venue = new Field({\n  name: \"Venue\",\n  type: \"text\",\n  description: \"Venue of the performance\",\n  debug: \"Madison Square Garden\",\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Date of the performance\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-15\",\n});\n\n// Module\nconst m_life = new Module(\n  [f_artist, f_year, f_title, f_performed, f_place, f_venue, f_date],\n  [\"#0\", \"#1\", \"i#2\", \"_[live performance]._\", \"+3_Performed by _#3_._\", \"#4_:_\", \"#5_,_\", \"#6_._\"]\n);\n\n// Adding the module to the life category\nlife.add_subcategory(\"Life performance\", m_life);\n\n// Exporting the \"life\" category with the associated module and fields\nexport default life;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\n\n// Category\nconst map = new Category(\"Map\");\n\n// Fields\nconst f_cartographer = new Field({\n  name: \"Cartographer\",\n  type: \"text\",\n  description: \"Name of the map's cartographer or creator\",\n  debug: \"Smith John\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title or name of the map\",\n  debug: \"World Map\",\n});\n\nconst f_series = new Field({\n  name: \"Series (optional)\",\n  type: \"text\",\n  description: \"Series to which the map belongs (if applicable)\",\n  debug: \"Geography Series\",\n  required: false,\n});\n\nconst f_number = new Field({\n  name: \"Sheet number (optional)\",\n  type: \"text\",\n  description: \"Number of the map within the series (if applicable)\",\n  debug: \"Map #5\",\n  required: false,\n});\n\nconst f_scale = new Field({\n  name: \"Scale (optional)\",\n  type: \"text\",\n  description: \"Scale of the map\",\n  debug: \"1:1,000,000\",\n  required: false,\n});\n\nconst f_place = new Field({\n  name: \"Place (optional)\",\n  type: \"text\",\n  description: \"City or location where the map was published\",\n  debug: \"Dublin\",\n  required: false,\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher (optional)\",\n  type: \"text\",\n  description: \"Name of the publisher of the map\",\n  debug: \"Map Publishing Co\",\n  required: false,\n});\n\nconst f_url = new Field(def_fields.url);\nconst f_accessed = new Field(def_fields.accessed);\n\n// Map Module\nconst m_map = new Module(\n  [f_cartographer, f_year, f_title, f_series, f_number, f_scale, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[map]._\", \"+3#3_,_\", \"+4#4_,_\", \"+5#5_._\", \"+6+7#6_:_\", \"+7#7_._\", \"+8#8\", \"+8#9\"]\n);\n\n// Adding the module to the map category\nmap.add_subcategory(\"Map\", m_map);\n\n// Exporting the \"map\" category with the associated module and fields\nexport default map;\n","// Importing necessary modules and data\nimport Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst music = new Category(\"Music\");\n\n// Fields\nconst f_artist = new Field({\n  name: \"Artist\",\n  type: \"text\",\n  description: \"Artist's stage name\",\n  debug: \"John Smith\",\n});\n\nconst f_year = new Field(def_fields.year);\nf_year.set_name(\"Year of release\");\n\nconst f_title = new Field({\n  name: \"Title of track\",\n  type: \"text\",\n  description: \"Title or name of the music piece\",\n  debug: \"Song of Joy\",\n});\n\nconst f_source = new Field({\n  name: \"Source\",\n  type: \"select\",\n  description: \"Sourse where the track was taken\",\n  values: [\"download\", \"CD\"],\n});\n\nconst f_length = new Field({\n  name: \"Length (optional)\",\n  type: \"text\",\n  description: \"Length of track in minutes and seconds. Example: 3 mins. 21 secs.\",\n  debug: \"3 mins. 21 secs.\",\n  required: false,\n});\n\nconst f_al_title = new Field({\n  name: \"Album Title (optional)\",\n  type: \"text\",\n  description: \"Title of the album (if applicable)\",\n  debug: \"Melodies of Life\",\n  required: false,\n});\n\nconst f_al_title_req = new Field({\n  name: \"Album Title\",\n  type: \"text\",\n  description: \"Title of the album\",\n  debug: \"Melodies of Life\",\n});\n\nconst f_place = new Field({\n  name: \"Place (optional)\",\n  type: \"text\",\n  description: \"Place of recording or performance (if known)\",\n  debug: \"New York City\",\n  required: false,\n});\n\nconst f_record = new Field({\n  name: \"Record label\",\n  type: \"text\",\n  description: \"Recording label or company\",\n  debug: \"Music Records Inc\",\n});\n\nconst f_url = new Field(def_fields.url);\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_composer = new Field({\n  name: \"Composer\",\n  type: \"text\",\n  description: \"Name of the composer of the music piece\",\n  parser: def_parsers.author,\n  debug: \"Doe Jane\",\n});\n\nconst f_performer = new Field({\n  name: \"Performer (optional)\",\n  type: \"text\",\n  description: \"If performer is significant put the name of the performer or artist\",\n  parser: def_parsers.author_reverse,\n  debug: \"Smith John\",\n  required: false,\n});\n\nconst f_s_title = new Field({\n  name: \"Title of score\",\n  type: \"text\",\n  description: \"Title or name of score\",\n  debug: \"Song of Joy\",\n});\n\nconst f_collection = new Field({\n  name: \"Collection (optional)\",\n  type: \"text\",\n  description: \"Name of the music collection or anthology\",\n  debug: \"Greatest Hits\",\n  required: false,\n});\n\nconst f_publisher = new Field(def_fields.publisher);\n\nconst f_p_range = new Field({\n  name: \"Page Range\",\n  type: \"text\",\n  description: \"Page range within a score or sheet music\",\n  parser: def_parsers.page,\n  debug: \"5-10\",\n});\n\n// Track Module\nconst m_track = new Module(\n  [f_artist, f_year, f_title, f_source, f_length, f_al_title, f_place, f_record, f_url, f_accessed],\n  [\"#0\", \"#1\", \"+5#2\", \"i-5#2\", \"_[_#3_]._\", \"+4#4\", \"i+5#5_._\", \"+6#6_:_\", \"+7#7_._\", \"+8#8\", \"+8#9\"]\n);\n\n// Album Module\nconst m_album = new Module(\n  [f_artist, f_year, f_al_title_req, f_source, f_place, f_record, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[_#3_]._\", \"+4#4_:_\", \"#5_._\", \"+6#6\", \"+6#7\"]\n);\n\n// Classical Track Module\nconst m_cl_track = new Module(\n  [f_composer, f_year, f_title, f_source, f_length, f_al_title, f_performer, f_place, f_record, f_url, f_accessed],\n  [\"#0\", \"#1\", \"#2\", \"_[_#3_]._\", \"+4#4\", \"i+5#5_._\", \"+6_Performed by _#6_._\", \"+7#7_:_\", \"#8_._\", \"+9#9\", \"+9#10\"]\n);\n\n// Classical Album Module\nconst m_cl_album = new Module(\n  [f_composer, f_year, f_al_title_req, f_source, f_performer, f_place, f_record, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[_#3_]._\", \"+4_Performed by _#4_._\", \"+5#5_:_\", \"#6_._\", \"+7#7\", \"+7#8\"]\n);\n\n// Score Module\nconst m_score = new Module(\n  [f_composer, f_year, f_s_title, f_collection, f_place, f_publisher, f_p_range, f_url, f_accessed],\n  [\"#0\", \"#1\", \"+3#2\", \"i-3#2\", \"_[score]._\", \"+3_In:_\", \"i+3#3_._\", \"+4#4_:_\", \"#5_,_\", \"#6_._\", \"+7#7\", \"+7#8\"]\n);\n\n// Adding the modules to the music category\nmusic.add_subcategory(\"Contemporary Track\", m_track);\nmusic.add_subcategory(\"Contemporary Album\", m_album);\nmusic.add_subcategory(\"Classical Track\", m_cl_track);\nmusic.add_subcategory(\"Classical Album\", m_cl_album);\nmusic.add_subcategory(\"Score\", m_score);\n\n// Exporting the \"music\" category with the associated modules and fields\nexport default music;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst newspaper = new Category(\"Newspaper\");\n\n// Fields\nconst f_journalist = new Field({\n  name: \"Journalist\",\n  type: \"text\",\n  description: def_fields.author.description,\n  parser: def_parsers.author,\n  debug: \"Doe John\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_headline = new Field({\n  name: \"Headline\",\n  type: \"text\",\n  description: \"Headline of the newspaper article\",\n  debug: \"Breaking News: Important Event\",\n});\n\nconst f_name = new Field({\n  name: \"Newspaper title\",\n  type: \"text\",\n  description: \"Title of the newspaper or publication\",\n  debug: \"Daily News\",\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Day and month when the newspaper article was published\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-10\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_page = new Field({\n  name: \"Page\",\n  type: \"text\",\n  description: \"Page number(s) of the article in the newspaper\",\n  parser: def_parsers.page,\n  debug: \"12-20\",\n});\n\n// Online Module\nconst m_online = new Module(\n  [f_journalist, f_year, f_headline, f_name, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"#2_._\", \"i#3_,_\", \"#4_._\", \"+5#5\", \"+5#6\"]\n);\n\n// Print Module\nconst m_print = new Module(\n  [f_journalist, f_year, f_headline, f_name, f_date, f_page],\n  [\"#0\", \"#1\", \"#2_._\", \"i#3_,_\", \"#4_._\", \"#5_._\"]\n);\n\n// Adding the modules to the newspaper category\nnewspaper.add_subcategory(\"Online\", m_online);\nnewspaper.add_subcategory(\"Print\", m_print);\n\n// Exporting the \"newspaper\" category with the associated modules and fields\nexport default newspaper;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst official = new Category(\"Official Publication\");\n\n// Fields\nconst f_act_title = new Field({\n  name: \"Title of the act\",\n  type: \"text\",\n  description: \"Title of the act, including year\",\n  debug: \"Example Act Title\",\n});\n\nconst f_place = new Field({\n  name: \"Place\",\n  type: \"text\",\n  description: \"Place of publication\",\n  debug: \"City, Country\",\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher\",\n  type: \"text\",\n  description: \"Publisher's name\",\n  debug: \"Publisher Co\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_si_title = new Field({\n  name: \"SI Title\",\n  type: \"text\",\n  description: \"Title of the SI, including year\",\n  debug: \"Example SI Title\",\n});\n\nconst f_si = new Field({\n  name: \"Number and Year\",\n  type: \"text\",\n  description: \"Number and year of SI divided by forward slash. Example: 32/2018\",\n  debug: \"32/2018\",\n});\n\nconst f_author = new Field({\n  name: \"Author\",\n  type: \"text\",\n  description: \"Author of the official document\",\n  debug: \"Counsil of the EU\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_eu_title = new Field({\n  name: \"EU Title\",\n  type: \"text\",\n  description: \"Full title including the type of document\",\n  debug: \"EU Document Title\",\n});\n\nconst f_name = new Field({\n  name: \"Name\",\n  type: \"text\",\n  description: \"Name of the official publication\",\n  debug: \"Official Gazette\",\n});\n\nconst f_issue = new Field({\n  name: \"Issue\",\n  type: \"text\",\n  description: \"Issue number of the official publication\",\n  debug: \"Issue #123\",\n});\n\nconst f_page = new Field({\n  name: \"Page\",\n  type: \"text\",\n  description: \"Page number(s) of the official document\",\n  parser: def_parsers.page,\n  debug: \"23-44\",\n});\n\nconst f_doc_ref = new Field({\n  name: \"Document Reference (optional)\",\n  type: \"text\",\n  description: \"Document reference (if available)\",\n  debug: \"1245\",\n  required: false,\n});\n\nconst f_tr_author = new Field({\n  name: \"Treaty Author\",\n  type: \"text\",\n  description: \"Author of the treaty\",\n  debug: \"Jane Smith\",\n});\n\nconst f_tr_title = new Field({\n  name: \"Treaty Title\",\n  type: \"text\",\n  description: \"Title of the treaty\",\n  debug: \"Treaty Title\",\n});\n\nconst f_identifiers = new Field({\n  name: \"Identifiers (optional)\",\n  type: \"text\",\n  description: \"Identifiers or codes associated with treaty\",\n  debug: \"324\",\n  required: false,\n});\n\nconst f_tr_date = new Field({\n  name: \"Treaty Date (optional)\",\n  type: \"date\",\n  description: \"Date when treaty was signed (if available)\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-15\",\n  required: false,\n});\n\n// Act Module\nconst m_act = new Module(\n  [f_act_title, f_place, f_publisher, f_url, f_accessed],\n  [\"i#0_._\", \"#1_:_\", \"#2_._\", \"+3#3\", \"+3#4\"]\n);\n\n// Statutory Module\nconst m_statutory = new Module(\n  [f_si_title, f_si, f_place, f_publisher, f_url, f_accessed],\n  [\"i#0_,_\", \"_SI. _#1_._\", \"#2_:_\", \"+3#3_._\", \"+4#4\", \"+4#5\"]\n);\n\n// EU Module\nconst m_eu = new Module(\n  [f_author, f_year, f_eu_title, f_name, f_issue, f_page, f_doc_ref, f_url, f_accessed],\n  [\"#0\", \"#1\", \"#2_._\", \"#3_,_\", \"#4_,_\", \"#5_._\", \"+6_(_#6_)._\", \"+7#7\", \"+7#8\"]\n);\n\n// Treaty Module\nconst m_treaty = new Module(\n  [f_tr_author, f_year, f_tr_title, f_identifiers, f_tr_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"+3_(_#3_)_\", \"+4#4_._\", \"+5#5\", \"+5#6\"]\n);\n\n// Adding the modules to the official category\nofficial.add_subcategory(\"Act of the Oireachtas\", m_act);\nofficial.add_subcategory(\"Statutory Instrument\", m_statutory);\nofficial.add_subcategory(\"EU decision/directive/regulation\", m_eu);\nofficial.add_subcategory(\"Treaty\", m_treaty);\n\n// Exporting the \"official\" category with the associated modules and fields\nexport default official;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst patent = new Category(\"Standart/Patent\");\n\n// Fields\nconst f_author = new Field({\n  name: \"Author/inventor\",\n  description:\n    \"For individual authors, use Surname First Name(s). If multiple authors, separate with commas. \" +\n    \"Example: Smith John, O'Connell Daniel. \" +\n    \"To preserve corporate names, enclose them in quotation marks. \" +\n    'Example: \"ABC Company\"',\n  type: \"text\",\n  parser: def_parsers.author,\n  debug: \"John Doe\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title of the patent/standart (and subtitle if applicable)\",\n  debug: \"Innovative Patent\",\n});\n\nconst f_number = new Field({\n  name: \"Number\",\n  type: \"text\",\n  description: \"Number of the patent/standart\",\n  debug: \"US1234567\",\n});\n\nconst f_place = new Field({\n  name: \"Place (optional)\",\n  type: \"text\",\n  description: \"Place of patent/standart issuance (if available)\",\n  debug: \"City, Country\",\n  required: false,\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher (optional)\",\n  type: \"text\",\n  description: \"Publisher's name (if available)\",\n  debug: \"Patent Office\",\n  required: false,\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Patent Module\nconst m_patent = new Module(\n  [f_author, f_year, f_title, f_number, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i+2#2_._\", \"#3_._\", \"+4+5#4_:_\", \"+5#5_._\", \"+6#6\", \"+6#7\"]\n);\n\n// Adding the module to the patent category\npatent.add_subcategory(\"Standart/Patent\", m_patent);\n\n// Exporting the \"patent\" category with the associated module and fields\nexport default patent;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst social = new Category(\"Social media\");\n\n// Fields\nconst f_contributor = new Field({\n  name: \"Contributor\",\n  type: \"text\",\n  description: \"Name of the contributor or creator\",\n  debug: \"Jane Doe\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title or short desctiption of post or content\",\n  debug: \"Interesting Post\",\n});\n\nconst f_type = new Field({\n  name: \"Type\",\n  type: \"select\",\n  description: \"Type of post\",\n  parser: (data) => \"[\" + data + \"].\",\n  values: [\"blog\", \"vlog\", \"podcast\", \"vidcast\", \"vodcast\", \"Twitter\", \"Facebook\"],\n});\n\nconst f_v_type = new Field({\n  name: \"Type\",\n  type: \"select\",\n  description: \"Type of content\",\n  parser: (data) => \"[\" + data + \"].\",\n  values: [\"image\", \"video\"],\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Date of the social media post or content\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-20\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Social Module\nconst m_social = new Module(\n  [f_contributor, f_year, f_title, f_type, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"#3\", \"#4_._\", \"+5#5\", \"+5#6\"]\n);\n\n// Video Module\nconst m_video = new Module(\n  [f_contributor, f_year, f_title, f_v_type, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"#3\", \"+4#4\", \"+4#5\"]\n);\n\n// Adding the modules to the social category\nsocial.add_subcategory(\"Social media\", m_social);\nsocial.add_subcategory(\"Video or Image service\", m_video);\n\n// Exporting the \"social\" category with the associated modules and fields\nexport default social;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\n\n// Category\nconst software = new Category(\"Software\");\n\n// Fields\nconst f_developer = new Field({\n  name: \"Developer\",\n  type: \"text\",\n  description: \"Name of the software developer or company\",\n  debug: \"TechCo\",\n});\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title of the software\",\n  debug: \"Awesome Software\",\n});\n\nconst f_type = new Field({\n  name: \"Type\",\n  type: \"select\",\n  description: \"Type of software\",\n  parser: (data) => \"[\" + data + \"].\",\n  values: [\"app\", \"game\", \"software\"],\n});\n\nconst f_version = new Field({\n  name: \"Version (optional)\",\n  type: \"text\",\n  description: \"Version of software (if available)\",\n  debug: \"3.4.2\",\n  required: false,\n});\n\nconst f_place = new Field({\n  name: \"Place (optional)\",\n  type: \"text\",\n  description: \"Place of software publication or distribution (if available)\",\n  debug: \"City, Country\",\n  required: false,\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher\",\n  type: \"text\",\n  description: \"Publisher's name\",\n  debug: \"Publisher Co\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Software Module\nconst m_software = new Module(\n  [f_developer, f_year, f_title, f_type, f_version, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"#3\", \"+4_Version _#4_._\", \"+5#5_:_\", \"#6_._\", \"+7#7\", \"+7#8\"]\n);\n\n// Adding the module to the software category\nsoftware.add_subcategory(\"Software\", m_software);\n\n// Exporting the \"software\" category with the associated module and fields\nexport default software;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\n\n// Category\nconst thesis = new Category(\"Thesis/Dissertation\");\n\n// Fields\nconst f_author = new Field(def_fields.author);\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title of the thesis/dissertation\",\n  debug: \"Exploring a Novel Idea\",\n});\n\nconst f_qualification = new Field({\n  name: \"Qualification\",\n  type: \"text\",\n  description: \"Qualification level. Example: PhD\",\n  debug: \"PhD\",\n});\n\nconst f_institution = new Field({\n  name: \"Institution\",\n  type: \"text\",\n  description: \"Institution where the thesis was submitted\",\n  debug: \"University of XYZ\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Thesis Module\nconst m_thesis = new Module(\n  [f_author, f_year, f_title, f_qualification, f_institution, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"#3_._\", \"#4_._\", \"+5#5\", \"+5#6\"]\n);\n\n// Adding the module to the thesis category\nthesis.add_subcategory(\"Thesis/Dissertation\", m_thesis);\n\n// Exporting the \"thesis\" category with the associated module and fields\nexport default thesis;\n","import Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst translation = new Category(\"Translation\");\n\n// Fields\nconst f_author = new Field(def_fields.author);\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title of the translated work\",\n  debug: \"The Great Novel (Translated)\",\n});\n\nconst f_translator = new Field(def_fields.author);\nf_translator.set_parameters({\n  name: \"Translator\",\n  parser: def_parsers.author_reverse,\n});\n\nconst f_place = new Field({\n  name: \"Place\",\n  type: \"text\",\n  description: \"Place of translation publication\",\n  debug: \"City, Country\",\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher\",\n  type: \"text\",\n  description: \"Publisher of the translation\",\n  debug: \"Translation Publisher Co\",\n});\n\n// Translation Module\nconst m_translation = new Module(\n  [f_author, f_year, f_title, f_translator, f_place, f_publisher],\n  [\"#0\", \"#1\", \"i#2_._\", \"_Translated by _#3_._\", \"+4#4_:_\", \"#5_._\"]\n);\n\n// Adding the module to the translation category\ntranslation.add_subcategory(\"Translated book\", m_translation);\n\n// Exporting the \"translation\" category with the associated module and fields\nexport default translation;\n","// Importing necessary classes and utilities\nimport Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\nimport def_parsers from \"../utilites/default_parsers\";\n\n// Category\nconst verbal = new Category(\"Verbal Communication\");\n\n// Fields\nconst f_speaker = new Field(def_fields.author);\nf_speaker.set_name(\"Speaker\");\n\nconst f_year = new Field(def_fields.year);\nf_year.set_description(\"Year of the verbal communication\");\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title or topic of the speech\",\n  debug: \"Public Speaking Tips\",\n});\n\nconst f_place = new Field({\n  name: \"Place\",\n  type: \"text\",\n  description: \"Place where speech was delivered\",\n  debug: \"Conference Hall A\",\n});\n\nconst f_date = new Field({\n  name: \"Date\",\n  type: \"date\",\n  description: \"Date of the verbal communication\",\n  parser: def_parsers.date_long,\n  debug: \"2023-08-15\",\n});\n\nconst f_url = new Field(def_fields.url);\n\nconst f_accessed = new Field(def_fields.accessed);\n\nconst f_caller = new Field(def_fields.author);\nf_caller.set_name(\"Caller\");\n\nconst f_description = new Field({\n  name: \"Description\",\n  type: \"text\",\n  description: \"Short description of the telephone call\",\n  debug: \"Key points from the speech\",\n});\n\nconst f_recipient = new Field(def_fields.author);\nf_recipient.set_parameters({\n  name: \"Recipient\",\n  parser: def_parsers.author_reverse,\n});\n\n// Modules\nconst m_speech = new Module(\n  [f_speaker, f_year, f_title, f_place, f_date, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2\", \"_[speech]._\", \"#3_,_\", \"#4_._\", \"+5#5\", \"+5#6\"]\n);\n\nconst m_telephone = new Module(\n  [f_caller, f_year, f_description, f_recipient, f_date],\n  [\"#0\", \"#1\", \"i#2\", \"_[telephone call]._\", \"_Conversation with _#3_,_\", \"#4_._\"]\n);\n\n// Adding modules to the verbal category\nverbal.add_subcategory(\"Speech\", m_speech);\nverbal.add_subcategory(\"Telephone/Skype/Conference/Video call\", m_telephone);\n\n// Exporting the \"verbal\" category with the associated modules and fields\nexport default verbal;\n","// Importing necessary classes and utilities\nimport Category from \"../utilites/Category\";\nimport Module from \"../utilites/Module\";\nimport Field from \"../utilites/Field\";\n\nimport def_fields from \"../utilites/default_fields\";\n\n// Category\nconst web = new Category(\"Website\");\n\n// Fields\n// const f_p_body = new Field({\n//   name: \"Professional Body\",\n//   type: \"text\",\n//   description: \"Company, Organisation or professional body\",\n//   debug: \"Fox Corp\",\n// });\n\nconst f_author = new Field(def_fields.author);\n\nconst f_year = new Field(def_fields.year);\n\nconst f_title = new Field({\n  name: \"Title\",\n  type: \"text\",\n  description: \"Title of the web page\",\n  debug: \"Introduction to Web Design\",\n});\n\nconst f_place = new Field({\n  name: \"Place (optional)\",\n  type: \"text\",\n  description: \"Place of publication (if known)\",\n  debug: \"Dublin\",\n  required: false,\n});\n\nconst f_publisher = new Field({\n  name: \"Publisher (optional)\",\n  type: \"text\",\n  description: \"Publisher or organization (if known)\",\n  debug: \"ABC Publishing\",\n  required: false,\n});\n\nconst f_url = new Field(def_fields.url);\nf_url.set_name(\"Web adress\");\nf_url.set_required(true);\n\nconst f_accessed = new Field(def_fields.accessed);\n\n// Modules\n// const m_organisation = new Module(\n//   [f_p_body, f_year, f_title, f_place, f_publisher, f_url, f_accessed],\n//   [\"#0\", \"#1\", \"i#2_._\", \"+3#3_:_\", \"+4#4_._\", \"#5\", \"#6\"]\n// );\n\nconst m_personal = new Module(\n  [f_author, f_year, f_title, f_place, f_publisher, f_url, f_accessed],\n  [\"#0\", \"#1\", \"i#2_._\", \"+3#3_:_\", \"+4#4_._\", \"#5\", \"#6\"]\n);\n\n// Adding modules to the web category\n//web.add_subcategory(\"Organisation\", m_organisation);\nweb.add_subcategory(\"Website\", m_personal);\n\n// Exporting the \"web\" category with the associated modules and fields\nexport default web;\n","//Library with all reference types and subtypes\nimport advertisement from \"./categories/advertisement\";\nimport art from \"./categories/art\";\nimport book from \"./categories/book\";\nimport case_study from \"./categories/case\";\nimport conference from \"./categories/conference\";\nimport correspondence from \"./categories/correspondence\";\n//import diagram from \"./categories/diagram\";\nimport film from \"./categories/film\";\nimport interview from \"./categories/interview\";\nimport journal from \"./categories/journal\";\nimport law from \"./categories/law\";\nimport lecture from \"./categories/lecture\";\nimport life from \"./categories/live\";\nimport map from \"./categories/map\";\nimport music from \"./categories/music\";\nimport newspaper from \"./categories/newspaper\";\nimport official from \"./categories/official\";\nimport patent from \"./categories/patent\";\nimport social from \"./categories/social\";\nimport software from \"./categories/software\";\nimport thesis from \"./categories/thesis\";\nimport translation from \"./categories/translation\";\nimport verbal from \"./categories/verbal\";\nimport web from \"./categories/web\";\n\nlet reference_db = [];\n\nadd_element(web);\nadd_element(book);\nadd_element(social);\nadd_element(advertisement);\nadd_element(art);\nadd_element(case_study);\nadd_element(conference);\nadd_element(correspondence);\n//add_element(diagram);\nadd_element(film);\nadd_element(interview);\nadd_element(journal);\nadd_element(law);\nadd_element(lecture);\nadd_element(life);\nadd_element(map);\nadd_element(music);\nadd_element(newspaper);\nadd_element(official);\nadd_element(software);\nadd_element(patent);\nadd_element(thesis);\nadd_element(translation);\nadd_element(verbal);\n\nfunction add_element(element) {\n  reference_db.push(element);\n}\n\nexport default reference_db;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word, console, bootstrap */\nimport reference_db from \"./database/reference_db\";\n\n//Initialise addon global variables\nconst ref_DB = [...reference_db]; //copy database into addon global variable\nlet selected_type = 0; //default value\nlet selected_subtype = 0; //default value\nlet module = null;\n\nconst ref_type_element = document.getElementById(\"reference_type_select\");\nconst ref_subtype_element = document.getElementById(\"reference_subtype_select\");\nconst ref_fields_element = document.getElementById(\"reference_fields\");\nconst ref_create_element = document.getElementById(\"create_reference_button\");\nconst ref_form = document.getElementById(\"reference_form\");\n\n//Initialise Addon\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    //init UI using default values\n    load_ref_types();\n    load_ref_subtypes();\n    load_ref_fields();\n\n    //init event handlers\n    ref_type_element.onchange = ref_type_onchange;\n    ref_subtype_element.onchange = ref_subtype_onchange;\n    ref_create_element.onclick = ref_create_onclick;\n\n    console.log(\"Addon Initiated!\");\n  }\n});\n\n//Load data from DB and update \"types\" UI element\nfunction load_ref_types() {\n  let types = ref_DB;\n  let id = 0;\n  ref_type_element.innerHTML = \"\";\n\n  types.forEach((option) => {\n    let optionElement = document.createElement(\"option\");\n    optionElement.value = id++;\n    optionElement.textContent = option.name;\n    ref_type_element.appendChild(optionElement);\n  });\n}\n\n//Load data from DB and update \"subtypes\" UI element\nfunction load_ref_subtypes() {\n  let subtypes = ref_DB[selected_type].subtypes;\n  let id = 0;\n  ref_subtype_element.innerHTML = \"\";\n\n  subtypes.forEach((option) => {\n    let optionElement = document.createElement(\"option\");\n    optionElement.value = id++;\n    optionElement.textContent = option.name;\n    ref_subtype_element.appendChild(optionElement);\n  });\n}\n\n//Load data from DB and update \"fields\" UI element\nfunction load_ref_fields() {\n  console.log(ref_DB);\n  module = ref_DB[selected_type].subtypes[selected_subtype].module;\n  module.create_html_code(ref_fields_element);\n  // Init bootstrap popovers\n  let popoverTriggerList = document.querySelectorAll('[data-bs-toggle=\"popover\"]');\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let popoverList = [...popoverTriggerList].map((popoverTriggerEl) => new bootstrap.Popover(popoverTriggerEl));\n}\n\n//create and print reference using user data\nexport async function create_reference() {\n  return Word.run(async (context) => {\n    let reference_array = module.create_ref_array();\n    reference_array.forEach(async (element) => {\n      const selection = context.document.getSelection();\n      const paragraph = selection.insertText(element.text + \" \", Word.InsertLocation.replace);\n      selection.select(Word.SelectionMode.end);\n      if (element.italic == true) paragraph.font.italic = true;\n      else paragraph.font.italic = false;\n      await context.sync();\n    });\n    let selection = context.document.getSelection();\n    selection.insertText(\"\\n\", Word.InsertLocation.before);\n    selection.select(Word.SelectionMode.end);\n  });\n}\n\n//EVENT HANDLERS\nfunction ref_type_onchange(event) {\n  selected_type = event.target.value;\n  selected_subtype = 0;\n  load_ref_subtypes();\n  load_ref_fields();\n}\n\nfunction ref_subtype_onchange(event) {\n  selected_subtype = event.target.value;\n  load_ref_fields();\n}\n\nasync function ref_create_onclick(event) {\n  event.preventDefault();\n  if (ref_form.checkValidity()) {\n    await create_reference();\n    ref_form.reset();\n  } else ref_form.reportValidity();\n}\n"],"names":["name","this","subtypes","add_subcategory","module","push","parser","init_value","logic","values_array","result","i","length","field_id","test","join","text","substring","fields","_this","parent_div","fields_array","create_html_code","innerHTML","iterator","forEach","field","main_container","document","createElement","form_container","label_element","htmlFor","input_element","type","values","value","optionElement","textContent","appendChild","required","placeholder","debug","id","get_value","checked","desc_button","role","tabIndex","dataset","bsContainer","bsToggle","bsPlacement","bsContent","description","bsTrigger","classList","add","create_ref_array","ref_array","element","ref_part","italic","name_or_obj","_typeof","data","trim","undefined","set_name","set_description","set_parser","set_debug_text","set_option_values","set_required","set_parameters","obj","def_parsers","toLowerCase","date","Date","getDate","toString","toLocaleString","month","getFullYear","authors","split","a","parts","part","reverse","author","author_reverse","def_fields","year","title","location","publisher","url","accessed","b_edition","b_page","page","advertisement","Category","f_advertiser","Field","f_year","f_desc","f_url","f_accessed","f_pub_title","f_pub_date","date_long","f_vol_num","f_issue","f_page_num","f_channel","f_ch_ad_date","f_ch_ad_time","m_online","Module","m_print","m_broadcast","art","f_artist","f_title","f_format","f_location","f_gallery","f_b_year","f_b_editor","f_b_title","f_b_edition","f_b_location","f_b_publisher","f_b_page","m_art","m_art_book","book","f_author","f_author_ed","f_edition","f_publisher","f_place","f_ch_author","f_ch_title","f_ch_editor","f_ch_page","f_in_author","f_in_type","f_in_b_author","f_s_version","f_cl_author","f_cl_translator","m_book","m_book_ed","m_book_chapter","m_intro_to_book","m_e_book","m_e_book_ed","m_sacred","m_classic","case_study","author_editor","m_case_study","m_case_study_ed","conference","f_con_editor","author_editor_reverse","f_con_title","f_con_place","f_con_date","m_paper","m_poster","correspondence","f_sender","f_subject","f_sent_to","f_date","m_email","m_letter","film","f_director","f_type","f_distributor","f_s_type","f_channel_ser","date_full","f_time","f_season","f_episode","m_film","m_radio_programme","m_radio_series","m_recorded","interview","f_interviewee","f_interviewer","f_programme","f_broadcast","f_description","m_interview","m_personal_interview","journal","m_journal","law","f_p_names","f_volume","f_abbreviation","f_page","f_court","m_case","m_unreported_case","lecture","f_lecturer","f_m_title","f_institut","m_lecture","life","m_life","map","m_map","music","f_source","f_length","f_al_title","f_al_title_req","f_record","f_composer","f_performer","f_s_title","f_collection","f_p_range","m_track","m_album","m_cl_track","m_cl_album","m_score","newspaper","f_journalist","f_headline","f_name","official","f_act_title","f_si_title","f_si","f_eu_title","f_doc_ref","f_tr_author","f_tr_title","f_identifiers","f_tr_date","m_act","m_statutory","m_eu","m_treaty","patent","m_patent","social","f_contributor","f_v_type","m_social","m_video","software","m_software","thesis","m_thesis","translation","f_translator","m_translation","verbal","f_speaker","f_caller","f_recipient","m_speech","m_telephone","web","m_personal","reference_db","add_element","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","o","minLen","n","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","ref_DB","selected_type","selected_subtype","ref_type_element","getElementById","ref_subtype_element","ref_fields_element","ref_create_element","ref_form","load_ref_subtypes","option","load_ref_fields","console","log","querySelectorAll","popoverTriggerEl","bootstrap","Popover","create_reference","_create_reference","_callee3","_context3","Word","run","_ref","_callee2","selection","_context2","_ref2","_callee","paragraph","_context","getSelection","insertText","InsertLocation","replace","select","SelectionMode","end","font","sync","_x3","before","_x2","ref_type_onchange","event","target","ref_subtype_onchange","ref_create_onclick","_x","_ref_create_onclick","_callee4","_context4","preventDefault","checkValidity","reportValidity","Office","onReady","types","host","HostType","onchange","onclick"],"sourceRoot":""}